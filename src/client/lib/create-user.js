const algorithm = {
  name: 'RSA-OAEP',
  modulusLength: 2048,
  publicExponent: new Uint8Array([0x01, 0x00, 0x01]),
  hash: { name: 'SHA-256' }
}

/*
  The default export should be a function that takes:
    - An user object with at least an username property

  The function should use crypto.sublte.generateKey()
  to generate a RSA-OAEP key-pair for the user.
  Then it should export the publicKey to a format that can be stringified.
  Finally it should return an object containing:
    - all the properties of the supplied user
    - the cryptoKeys property holding the keys generated by crypto.sublte.generateKey()
    - a stringified publicKey
  (See 'spec' below)
*/

export default function(user) {
  return Promise.resolve({
    ...user,
    cryptoKeys: {},
    publicKeyString: ''
  })
}